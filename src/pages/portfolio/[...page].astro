---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import PageHeader from '@components/PageHeader.astro'
import { Pagination } from 'accessible-astro-components'
import { getCollection } from 'astro:content'
import { Image } from 'astro:assets'
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'

// Import images directly for optimization
import projectImage1 from '@assets/images/projects/intro-to-git.png'
import projectImage2 from '@assets/images/projects/principal-tracker.png'
import projectImage3 from '@assets/images/projects/teacher-salary-project-new.png'
// import projectImage5 from '@assets/images/projects/CAR-explainer.png'

export const getStaticPaths = (async ({ paginate }) => {
  const projects = await getCollection('projects')

  // Sort projects by pub_date (newest first), then by title if dates are the same
  const sortedProjects = projects.sort((a, b) => {
    const dateA = new Date(a.data.pub_date || '1900-01-01')
    const dateB = new Date(b.data.pub_date || '1900-01-01')

    // Sort by date descending (newest first)
    if (dateB.getTime() !== dateA.getTime()) {
      return dateB.getTime() - dateA.getTime()
    }

    // If dates are the same, sort by title ascending
    return a.data.title.localeCompare(b.data.title)
  })

  const projectImages = [
    projectImage1,
    projectImage2,
    projectImage3,
    // projectImage4,
    // projectImage5
  ]

  const projectsWithImages = sortedProjects.map((project, index) => {
    return {
      ...project,
      featuredImage: projectImages[index % projectImages.length],
    }
  })

  return paginate(projectsWithImages, { pageSize: 6 })
}) satisfies GetStaticPaths

interface Props {
  page: Page<CollectionEntry<'projects'> & { featuredImage: any }>
}

const { page } = Astro.props

// Prepare pagination props
const currentPage = page.currentPage
const totalPages = Math.ceil(page.total / page.size)
---

<DefaultLayout
  title="Portfolio"
  description="A showcase of recent projects I've worked on, demonstrating my skills in technical content creation, data visualization, and web development."
>
  <PageHeader
    title="portfolio"
    subtitle='A showcase of recent projects I have worked on, demonstrating my skills in technical content creation, data analysis, and visualization. See more of my journalism work on my <a href="https://www.houstonchronicle.com/author/anastasia-goodwin/">Houston Chronicle author page</a>.'
    bgType="bordered"
  />
  <!-- PUT THIS BACK WHEN PROJECTS IS GOOOOOD -->
  <section class="container my-8 lg:px-0">
    <div class="space-y-12">
      <p class="text-sm"><em>Project {page.start + 1} through {page.end + 1} of {page.total} total projects</em></p>
      {
        page.data.map((project) => (
          <article class="bottom-bordered my-8 flex flex-col gap-6 py-8 md:flex-row md:gap-8">
            <div class="md:w-1/3">
              <a
                href={project.data.live_url ? project.data.live_url : '/portfolio/' + project.id}
                target="_blank"
                rel="noopener noreferrer"
                class="block overflow-hidden"
              >
                <Image
                  src={project.featuredImage}
                  alt={`${project.data.title} project screenshot`}
                  class="h-full w-full object-cover"
                  loading="lazy"
                  width={400}
                  height={300}
                />
              </a>
            </div>
            <div class="md:w-2/3">
              <div class="flex flex-col gap-4">
                <a
                  href={project.data.live_url ? project.data.live_url : '/portfolio/' + project.id}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="group"
                >
                  <h3 class="text-lg font-bold text-gray-900 sm:text-2xl">{project.data.title}</h3>
                </a>

                <div class="text-primary-600 text-sm font-bold">
                  {(project.data.company || '').toUpperCase()} | {(project.data.pub_date || '').toUpperCase()}
                </div>

                <p class="text-base leading-relaxed text-gray-700 dark:text-neutral-300">{project.data.description}</p>
                <p class="text-base leading-relaxed text-gray-700 dark:text-neutral-300">
                  {project.data.responsibilities}
                </p>
                {/* PROJECT TAGS */}
                {project.data.project_tags && (
                  <div class="flex flex-wrap gap-2">
                    {project.data.project_tags.split(',').map((tag) => (
                      <span class="font-large dark:text-primary-300 rounded-full py-1 text-sm text-neutral-600">
                        {tag.trim()},
                      </span>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </article>
        ))
      }
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/portfolio' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/portfolio/${Math.ceil(page.total / page.size)}` : null}
          currentPage={`${page.currentPage}`}
          totalPages={`${Math.ceil(page.total / page.size)}`}
          ariaLabel="Portfolio pagination"
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss" is:global>
  @use '../../assets/scss/base/mixins' as *;

  main a {
    text-decoration: none;
    :hover {
      color: var(--color-primary-400);
    }
  }
</style>
